/*
 * This source file was generated by the Gradle 'init' task
 */
package com.example.calcsolver;

/*
This application is now configured as a Gradle project for compatibility with Android Studio and future Android development.
To set it up:
1. Create a Gradle project.
2. Replace the `build.gradle` or `build.gradle.kts` files with appropriate configurations for Java Swing development.
3. Later adapt the project for Android by adjusting dependencies and modules.
*/

// Calculator Front-End (Swing UI)
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;

public class CalculatorUI {
    private CalculatorBackend backend;

    public CalculatorUI(CalculatorBackend backend) {
        this.backend = backend;
        createAndShowGUI();
    }

    private void createAndShowGUI() {
        JFrame frame = new JFrame("Calculator");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 600);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());

        JTextField display = new JTextField();
        display.setFont(new Font("Arial", Font.PLAIN, 24));
        display.setHorizontalAlignment(JTextField.RIGHT);
        panel.add(display, BorderLayout.NORTH);

        JPanel buttonPanel = new JPanel();
        buttonPanel.setLayout(new GridLayout(6, 4, 5, 5));

        // Basic calculator buttons
        String[] buttons = {"7", "8", "9", "+",
                            "4", "5", "6", "-",
                            "1", "2", "3", "*",
                            "C", "0", "=", "/",
                            "(", ")", "^", "âˆš",
                            "."}; // Added decimal point button
        for (String text : buttons) {
            JButton button = new JButton(text);
            button.setFont(new Font("Arial", Font.PLAIN, 18));
            button.addActionListener((ActionEvent e) -> {
                if (text.equals("C")) {
                    display.setText("");
                } else {
                    if (text.equals(".")) {
                        String currentText = display.getText();
                        String[] parts = currentText.split("[^0-9.]+"); // Split by non-numeric characters
                        String lastNumber = parts.length > 0 ? parts[parts.length - 1] : "";
                        if (!lastNumber.contains(".")) {
                            display.setText(currentText + text);
                        }
                    } else {
                        display.setText(display.getText() + text);
                    }
                }
            });
            buttonPanel.add(button);
        }

        // Variable buttons (M through V)
        for (char variable = 'M'; variable <= 'V'; variable++) {
            JButton button = new JButton(String.valueOf(variable));
            button.setFont(new Font("Arial", Font.PLAIN, 18));
            button.addActionListener((ActionEvent e) -> {
                display.setText(display.getText() + button.getText());
            });
            buttonPanel.add(button);
        }

        panel.add(buttonPanel, BorderLayout.CENTER);

        // Add "Solve" button
        JButton solveButton = new JButton("Solve");
        solveButton.setFont(new Font("Arial", Font.BOLD, 18));
        solveButton.addActionListener((ActionEvent e) -> {
            String input = display.getText();
            String result = backend.solveEquation(input);
            display.setText(result);
        });
        panel.add(solveButton, BorderLayout.SOUTH);

        frame.add(panel);
        frame.setVisible(true);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new CalculatorUI(new CalculatorBackend()));
    }
}
